name: Docker Build and Push


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Extract Image Name and Tag
        id: extract_image_parts
        run: |
          IMAGE_NAME="${{ vars.DOCKER_IMAGE_NAME }}"
          BASE_NAME=$(echo "$IMAGE_NAME" | cut -d':' -f1)
          TAG=$(echo "$IMAGE_NAME" | cut -d':' -f2)
          echo "BASE_NAME=$BASE_NAME" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Start Build Timer
        id: build_start_time
        run: echo "BUILD_START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Build Docker Image
        id: docker_build
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.BASE_NAME }}
          tags: ${{ env.TAG }}
          registry: docker.io
          dockerfile: Dockerfile.ci
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: End Build Timer
        id: build_end_time
        run: echo "BUILD_END_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Calculate Build Time
        id: build_time
        run: echo "BUILD_TIME=$((BUILD_END_TIME - BUILD_START_TIME))" >> $GITHUB_ENV

      - name: Start Push Timer
        id: push_start_time
        run: echo "PUSH_START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Push Docker Image
        if: success()
        run: |
          docker push ${{ vars.DOCKER_IMAGE_NAME }}

      - name: End Push Timer
        id: push_end_time
        run: echo "PUSH_END_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Calculate Push Time
        id: push_time
        run: echo "PUSH_TIME=$((PUSH_END_TIME - PUSH_START_TIME))" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ vars.SLACK_WEBHOOK_URL }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          BUILD_TIME: ${{ env.BUILD_TIME }}
          PUSH_TIME: ${{ env.PUSH_TIME }}
          DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
          BASE_NAME: ${{ env.BASE_NAME }}
          TAG: ${{ env.TAG }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"üõ†Ô∏è *Build and Push Successful*\n*Repository:* $GITHUB_REPOSITORY\n*Branch/Tag:* $GITHUB_REF_NAME\n*Image:* $DOCKER_IMAGE_NAME\n*Base Image:* $BASE_NAME\n*Tag:* $TAG\n*Deployed by:* $GITHUB_ACTOR\",
            \"attachments\": [
              {
                \"title\": \"Details\",
                \"fields\": [
                  {\"title\": \"Branch\", \"value\": \"$GITHUB_REF_NAME\", \"short\": true},
                  {\"title\": \"Deployed by\", \"value\": \"$GITHUB_ACTOR\", \"short\": true},
                  {\"title\": \"Commit Message\", \"value\": \"$COMMIT_MESSAGE\", \"short\": false},
                  {\"title\": \"Build Time\", \"value\": \"${BUILD_TIME}s\", \"short\": true},
                  {\"title\": \"Push Time\", \"value\": \"${PUSH_TIME}s\", \"short\": true},
                  {\"title\": \"Workflow Run\", \"value\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"short\": false}
                ]
              }
            ]
          }" $SLACK_WEBHOOK_URL